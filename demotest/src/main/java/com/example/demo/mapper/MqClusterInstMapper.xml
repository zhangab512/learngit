<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.demo.mapper.MqClusterInstMapper" >
  <resultMap id="BaseResultMap" type="com.example.demo.mapper.model.MqClusterInst" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="cluster_name" property="clusterName" jdbcType="VARCHAR" />
    <result column="crt_time" property="crtTime" jdbcType="TIMESTAMP" />
    <result column="cluster_user" property="clusterUser" jdbcType="VARCHAR" />
    <result column="tanantId" property="tanantid" jdbcType="VARCHAR" />
    <result column="deploy_resource" property="deployResource" jdbcType="VARCHAR" />
    <result column="tanantName" property="tanantname" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="VARCHAR" />
    <result column="state" property="state" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.example.demo.mapper.model.MqClusterInst" extends="BaseResultMap" >
    <result column="cluster_inst" property="clusterInst" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, cluster_name, crt_time, cluster_user, tanantId, deploy_resource, tanantName, 
    type, state
  </sql>
  <sql id="Blob_Column_List" >
    cluster_inst
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.example.demo.mapper.model.MqClusterInstExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from mq_cluster_inst
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.example.demo.mapper.model.MqClusterInstExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from mq_cluster_inst
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from mq_cluster_inst
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from mq_cluster_inst
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.demo.mapper.model.MqClusterInstExample" >
    delete from mq_cluster_inst
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.demo.mapper.model.MqClusterInst" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into mq_cluster_inst (cluster_name, crt_time, cluster_user, 
      tanantId, deploy_resource, tanantName, 
      type, state, cluster_inst
      )
    values (#{clusterName,jdbcType=VARCHAR}, #{crtTime,jdbcType=TIMESTAMP}, #{clusterUser,jdbcType=VARCHAR}, 
      #{tanantid,jdbcType=VARCHAR}, #{deployResource,jdbcType=VARCHAR}, #{tanantname,jdbcType=VARCHAR}, 
      #{type,jdbcType=VARCHAR}, #{state,jdbcType=VARCHAR}, #{clusterInst,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.mapper.model.MqClusterInst" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into mq_cluster_inst
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="clusterName != null" >
        cluster_name,
      </if>
      <if test="crtTime != null" >
        crt_time,
      </if>
      <if test="clusterUser != null" >
        cluster_user,
      </if>
      <if test="tanantid != null" >
        tanantId,
      </if>
      <if test="deployResource != null" >
        deploy_resource,
      </if>
      <if test="tanantname != null" >
        tanantName,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="clusterInst != null" >
        cluster_inst,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="clusterName != null" >
        #{clusterName,jdbcType=VARCHAR},
      </if>
      <if test="crtTime != null" >
        #{crtTime,jdbcType=TIMESTAMP},
      </if>
      <if test="clusterUser != null" >
        #{clusterUser,jdbcType=VARCHAR},
      </if>
      <if test="tanantid != null" >
        #{tanantid,jdbcType=VARCHAR},
      </if>
      <if test="deployResource != null" >
        #{deployResource,jdbcType=VARCHAR},
      </if>
      <if test="tanantname != null" >
        #{tanantname,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        #{state,jdbcType=VARCHAR},
      </if>
      <if test="clusterInst != null" >
        #{clusterInst,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.demo.mapper.model.MqClusterInstExample" resultType="java.lang.Integer" >
    select count(*) from mq_cluster_inst
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update mq_cluster_inst
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.clusterName != null" >
        cluster_name = #{record.clusterName,jdbcType=VARCHAR},
      </if>
      <if test="record.crtTime != null" >
        crt_time = #{record.crtTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.clusterUser != null" >
        cluster_user = #{record.clusterUser,jdbcType=VARCHAR},
      </if>
      <if test="record.tanantid != null" >
        tanantId = #{record.tanantid,jdbcType=VARCHAR},
      </if>
      <if test="record.deployResource != null" >
        deploy_resource = #{record.deployResource,jdbcType=VARCHAR},
      </if>
      <if test="record.tanantname != null" >
        tanantName = #{record.tanantname,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.state != null" >
        state = #{record.state,jdbcType=VARCHAR},
      </if>
      <if test="record.clusterInst != null" >
        cluster_inst = #{record.clusterInst,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update mq_cluster_inst
    set id = #{record.id,jdbcType=BIGINT},
      cluster_name = #{record.clusterName,jdbcType=VARCHAR},
      crt_time = #{record.crtTime,jdbcType=TIMESTAMP},
      cluster_user = #{record.clusterUser,jdbcType=VARCHAR},
      tanantId = #{record.tanantid,jdbcType=VARCHAR},
      deploy_resource = #{record.deployResource,jdbcType=VARCHAR},
      tanantName = #{record.tanantname,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=VARCHAR},
      state = #{record.state,jdbcType=VARCHAR},
      cluster_inst = #{record.clusterInst,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update mq_cluster_inst
    set id = #{record.id,jdbcType=BIGINT},
      cluster_name = #{record.clusterName,jdbcType=VARCHAR},
      crt_time = #{record.crtTime,jdbcType=TIMESTAMP},
      cluster_user = #{record.clusterUser,jdbcType=VARCHAR},
      tanantId = #{record.tanantid,jdbcType=VARCHAR},
      deploy_resource = #{record.deployResource,jdbcType=VARCHAR},
      tanantName = #{record.tanantname,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=VARCHAR},
      state = #{record.state,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.mapper.model.MqClusterInst" >
    update mq_cluster_inst
    <set >
      <if test="clusterName != null" >
        cluster_name = #{clusterName,jdbcType=VARCHAR},
      </if>
      <if test="crtTime != null" >
        crt_time = #{crtTime,jdbcType=TIMESTAMP},
      </if>
      <if test="clusterUser != null" >
        cluster_user = #{clusterUser,jdbcType=VARCHAR},
      </if>
      <if test="tanantid != null" >
        tanantId = #{tanantid,jdbcType=VARCHAR},
      </if>
      <if test="deployResource != null" >
        deploy_resource = #{deployResource,jdbcType=VARCHAR},
      </if>
      <if test="tanantname != null" >
        tanantName = #{tanantname,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=VARCHAR},
      </if>
      <if test="clusterInst != null" >
        cluster_inst = #{clusterInst,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.example.demo.mapper.model.MqClusterInst" >
    update mq_cluster_inst
    set cluster_name = #{clusterName,jdbcType=VARCHAR},
      crt_time = #{crtTime,jdbcType=TIMESTAMP},
      cluster_user = #{clusterUser,jdbcType=VARCHAR},
      tanantId = #{tanantid,jdbcType=VARCHAR},
      deploy_resource = #{deployResource,jdbcType=VARCHAR},
      tanantName = #{tanantname,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      state = #{state,jdbcType=VARCHAR},
      cluster_inst = #{clusterInst,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.mapper.model.MqClusterInst" >
    update mq_cluster_inst
    set cluster_name = #{clusterName,jdbcType=VARCHAR},
      crt_time = #{crtTime,jdbcType=TIMESTAMP},
      cluster_user = #{clusterUser,jdbcType=VARCHAR},
      tanantId = #{tanantid,jdbcType=VARCHAR},
      deploy_resource = #{deployResource,jdbcType=VARCHAR},
      tanantName = #{tanantname,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      state = #{state,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>